package cn.wulin.plant.vs.zombie;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import java.net.URL;

import javax.imageio.ImageIO;
import javax.swing.JFrame;
import javax.swing.JPanel;

import sun.awt.image.URLImageSource;

public class TestImageGif extends JPanel {
	private static final long serialVersionUID = 1L;

	public static void main(String[] args) {

		TestImageGif testImageGif = new TestImageGif();
		JFrame frame = new JFrame();
		frame.add(testImageGif);

		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(300, 200);
		frame.setLocationRelativeTo(null);
		frame.setVisible(true);
		
//		Timer timer = new Timer();
//		int interval = 10;
//		timer.schedule(new TimerTask() {
//			public void run() {
//				
//				testImageGif.repaint();
//			}
//		},interval,interval);

	}
	
	// 加载img图片
		public static BufferedImage loadImage(String fileName) {
			URL resource = Thread.currentThread().getContextClassLoader().getResource("images/" + fileName);
			System.out.println(resource.toString());
			try {
				BufferedImage img = ImageIO.read(resource);

//					img = resizeBufferedImage(img, 100, 100, true);
//				img = resize(img, 800, 800);

				return img;
			} catch (Exception e) {
				e.printStackTrace();
				throw new RuntimeException();
			}
		}
		
	Toolkit toolkit =Toolkit.getDefaultToolkit();
	Image createImage = updateImage();
	
	public Image updateImage() {
		Image image = toolkit.getImage(loadImage2("sunflower0.gif"));
		
		image = image.getScaledInstance(300, 300, 10);
		return image;
	}
	
//	Image createImage2 = resize2(createImage,100, 100);
//	Image createImage = loadImage("sunflower0.gif");
	
	@Override
	public void paint(Graphics g) {
		
		
		
//		g.drawImage(loadImage("sunflower0.gif"), 0, 0, null);
		
		g.drawImage(createImage, 0, 0, this);
		
	}
//	
//	private JPanel getJPanel() {
//		JPanel jp = new JPanel() {
// 
//			@Override
//			protected void paintComponent(Graphics g) {
//				// TODO Auto-generated method stub
//				super.paintComponent(g);
//				g.drawImage(image, 0, 0, this);
//			}
// 
//		};
//		return jp;
//	}
	
	public URL loadImage2(String fileName) {
		URL resource = Thread.currentThread().getContextClassLoader().getResource("images/" + fileName);
		return resource;
	}

	 /* 调整图片大小
	 * @param img
	 * @param newW
	 * @param newH
	 * @return
	 */
	public Image resize2(Image createImage, int newW, int newH) {
		BufferedImage dimg = new BufferedImage(newW, newH, BufferedImage.TYPE_INT_ARGB);

		Graphics2D g2d = dimg.createGraphics();
		g2d.drawImage(createImage, 0, 0, null);
		g2d.dispose();

		return dimg.getScaledInstance(newW, newH, Image.SCALE_SMOOTH);
	}
	

	/**
	 * 调整图片大小
	 * @param img
	 * @param newW
	 * @param newH
	 * @return
	 */
	public static BufferedImage resize(BufferedImage img, int newW, int newH) {
		Image tmp = img.getScaledInstance(newW, newH, Image.SCALE_SMOOTH);
		BufferedImage dimg = new BufferedImage(newW, newH, BufferedImage.TYPE_INT_ARGB);

		Graphics2D g2d = dimg.createGraphics();
		g2d.drawImage(tmp, 0, 0, null);
		g2d.dispose();

		return dimg;
	}

}
